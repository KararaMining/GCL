//*********************************************************************************************************************************
//
// PROJECT:							General Class Library (GCL)
// FILE:                GCL Include File
// SUBSYSTEM:						Include file for the entire library
// LANGUAGE:						C++
// TARGET OS:						All (Standard C++)
// NAMESPACE:						GCL
// AUTHOR:							Gavin Blakeman.
// LICENSE:             GPLv2
//
//                      Copyright 2013-2020, 2022 Gavin Blakeman.
//                      This file is part of the General Class Library (GCL)
//
//                      GCL is free software: you can redistribute it and/or modify it under the terms of the GNU General
//                      Public License as published by the Free Software Foundation, either version 2 of the License, or
//                      (at your option) any later version.
//
//                      GCL is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
//                      implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
//                      for more details.
//
//                      You should have received a copy of the GNU General Public License along with GCL.  If not,
//                      see <http://www.gnu.org/licenses/>.
//
// OVERVIEW:            Include file that includes all the modules in the GCL library.
//
// CLASSES INCLUDED:    None
//
// HISTORY:             2018-07-06 GGB - Added alarm module.
//                      2015-09-22 GGB - AIRDAS 2015.09 release
//                      2015-07-06 GGB - Updated Error files.
//                      2013-01-26 GGB - Development of classes for application AIRDAS.
//
//*********************************************************************************************************************************

#ifndef GCL_H
#define GCL_H

/// @section Compilation Control
/// The following macros control how the code will be compiled for various applications.
/// @li @b GCL_NOBOOST - Do not use the Boost C++ libraries. This should only be used on platforms where the Boost C++ libraries
///                      are not supported. By default the Boost C++ libraries are enabled.
/// @li @b GCL_NOMT - Do not use multi-threading. This should only be used on platforms where multi-threading is not available. By
/// 									 default, multi-threading support is enabled.
/// @li @b GCL_REALTIME - Compile in the realtime library support. By default this will not be compiled in.
/// @li @b GCL_NOSTRINGS - Compile without using strings. This is intended to be used for embedded applications.
/// @li @b EMBEDDED - Compile the library for embedded applications.
/// @li @b GCL_CONTROL - Compile the library for control type applications.

#include "include/config.h"
#include "include/alarm/alarmCore.h"
#include "include/alarm/alarmDaily.h"
#include "include/alarm/alarmWeekly.h"
#include "include/configurationReader/readerSections.hpp"
#include "include/configurationReader/readerVanilla.hpp"
#include "include/error.h"
#include "include/GCLError.h"
#include "include/logger/loggerCore.h"
#include "include/logger/fileSink.h"
#include "include/logger/streamSink.h"
#include "include/common.h"
#include "include/dateTime.h"
#include "include/filesystem.h"
#include "include/Functions.h"
#include "include/SQLWriter.h"
#include "include/Resource.h"
#include "include/pluginManager/pluginManager.h"

  // Inject the logger functions into the global namespace.

using GCL::logger::LOGMESSAGE;
using GCL::logger::CRITICALMESSAGE;
using GCL::logger::ERRORMESSAGE;
using GCL::logger::WARNINGMESSAGE;
using GCL::logger::NOTICEMESSAGE;
using GCL::logger::INFOMESSAGE;
using GCL::logger::DEBUGMESSAGE;
using GCL::logger::LOGEXCEPTION;
using GCL::logger::TRACEMESSAGE;
using GCL::logger::TRACEENTER;
using GCL::logger::TRACEEXIT;

  // Inject the error functions into the global namespace.

using GCL::RUNTIME_ERROR;
using GCL::CODE_ERROR;

#endif //GCL_H
